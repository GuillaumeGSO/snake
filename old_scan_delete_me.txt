    def scan(self):
        scan = [[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]]
        food = self.food
        structure = self.structure
        head_x = self.snake.head[0]
        head_y = self.snake.head[1]
        up_range = head_y + 1
        down_range = 30 - head_y
        left_range = head_x + 1
        right_range = 30 - head_x

        for i in range(1, 8):

            if i < up_range:                                                                # Scanning UP
                if structure[head_y - i][head_x] == WALL:
                    scan[0][0] = 1/distance((head_x, head_y), (head_x, head_y - i))
                elif food[0] == head_x and food[1] == (head_y - i):
                    scan[8][0] = 1
                if i < left_range:                                                          # Scanning UP-LEFT
                    if structure[head_y - i][head_x - i] == WALL:
                        scan[4][0] = 1/distance((head_x, head_y), (head_x - i, head_y - i))
                    elif food[0] == (head_x - i) and food[1] == (head_y - i):
                        scan[12][0] = 1

            if i < down_range:                                                              # Scanning DOWN
                if structure[head_y + i][head_x] == WALL:
                    scan[1][0] = 1/distance((head_x, head_y), (head_x, head_y + i))
                elif food[0] == head_x and food[1] == (head_y + i):
                    scan[9][0] = 1
                if i < right_range:                                                         # Scanning DOWN-RIGHT
                    if structure[head_y + i][head_x + i] == WALL:
                        scan[5][0] = 1/distance((head_x, head_y), (head_x + i, head_y + i))
                    elif food[0] == (head_x + i) and food[1] == (head_y + i):
                        scan[13][0] = 1

            if i < left_range:                                                              # Scanning LEFT
                if structure[head_y][head_x - i] == WALL:
                    scan[2][0] = 1/distance((head_x, head_y), (head_x - i, head_y))
                elif food[0] == (head_x - i) and food[1] == head_y:
                    scan[10][0] = 1
                if i < down_range:                                                          # Scanning DOWN-LEFT
                    if structure[head_y + i][head_x - i] == WALL:
                        scan[6][0] = 1/distance((head_x, head_y), (head_x + i, head_y - i))
                    elif food[0] == (head_x - i) and food[1] == (head_y + i):
                        scan[14][0] = 1

            if i < right_range:                                                             # Scanning RIGHT
                if structure[head_y][head_x + i] == WALL:
                    scan[3][0] = 1/distance((head_x, head_y), (head_x + i, head_y))
                elif food[0] == (head_x + i) and food[1] == head_y:
                    scan[11][0] = 1
                if i < up_range:                                                            # Scanning UP-RIGHT
                    if structure[head_y - i][head_x + i] == WALL:
                        scan[7][0] = 1/distance((head_x, head_y), (head_x - i, head_y + i))
                    elif food[0] == (head_x + i) and food[1] == (head_y - i):
                        scan[15][0] = 1
        self.snake.vision = scan